# This is a special configuration file to run tests on Circle-CI via
# GitHub notifications when changes are committed.
#
# This file is not intended for end users of Biopython.
#
# This uses a CircleCI provided Python image, see
# https://circleci.com/developer/images/image/cimg/python

version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Combine precommit config and python versions for caching
          command: |
            cat .pre-commit-config.yaml > pre-commit-deps.txt
            python -VV >> pre-commit-deps.txt
      - restore_cache:
          keys:
          - v1-precommit-deps-{{ checksum "pre-commit-deps.txt" }}
      - run:
          name: Style install
          command: |
            python --version
            pip install pre-commit
            pre-commit install
            pre-commit install-hooks
      - save_cache:
          paths:
            - ~/.cache/pre-commit
            - ./venv
          key: v1-precommit-deps-{{ checksum "pre-commit-deps.txt" }}
      #- run:
      #    name: Style checks
      #    command: |
      #      pre-commit run -a
      - run:
          name: Dependencies
          command: |
            python --version
            pip install coverage codecov numpy scipy mmtf-python mysqlclient mysql-connector-python rdflib networkx matplotlib reportlab
            echo "Python dependencies installed"
      - run:
          name: Installation
          command: |
            python setup.py sdist --formats=gztar
            echo "Built tar-ball, will now use that to test manifest..."
            tar -zxvf dist/biopython-*.tar.gz
            cd biopython-*/
            python setup.py bdist_wheel
            echo "Built wheel and installing it..."
            python -m pip install dist/biopython-*.whl
            echo "Biopython should now be installed"
      - run:
          name: Test
          command: |
            # Use the unzipped tar-ball where built wheel
            cd biopython-*/Tests/
            rm -rf coverage.xml
            coverage run run_tests.py --offline
            echo "Tests run"
            coverage xml
      - codecov/upload:
          file: biopython-*/Tests/coverage.xml
  build-medium:
    machine:
      image: ubuntu-1604:202007-01
    steps:
      - checkout
      - run:
          name: Setup Qemu
          command: |
            docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - run: |
            docker run --rm  --entrypoint=cat weaveworks/weaveexec@sha256:d19ca4e518ee3d52bfbd6c6b8fb90c258622462ff8386de39e15b0fa6edb02e5 /usr/bin/weaveutil > weaveutil_arm64
      - run: |
            docker run --rm ubuntu@sha256:e8eb681cb9e01f339e1d68a47bf6d08a876f875ecf68f263891770bdc3400485 uname -m
      - run: |
            docker run --rm -v `pwd`:/biopython quay.io/pypa/manylinux2010_x86_64 /bin/sh -c ls && uname -m
      - run: |
            docker run --rm -v `pwd`:/biopython quay.io/pypa/manylinux2014_aarch64 /bin/sh -c ls && uname -m
workflows:
  version: 2
  build_and_test:
    jobs:
      #- build
      - build-medium
